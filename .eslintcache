[{"/home/ky/deploy/finalregister/src/index.js":"1","/home/ky/deploy/finalregister/src/App.js":"2","/home/ky/deploy/finalregister/src/reportWebVitals.js":"3","/home/ky/deploy/finalregister/src/component/form/login/index.js":"4","/home/ky/deploy/finalregister/src/component/todo/index.js":"5","/home/ky/deploy/finalregister/src/component/form/register/index.js":"6"},{"size":500,"mtime":1613727291758,"results":"7","hashOfConfig":"8"},{"size":2912,"mtime":1613802271513,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1613727291758,"results":"10","hashOfConfig":"8"},{"size":2620,"mtime":1613802271513,"results":"11","hashOfConfig":"8"},{"size":6205,"mtime":1613802271513,"results":"12","hashOfConfig":"8"},{"size":3333,"mtime":1613802271513,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1dacsy0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/ky/deploy/finalregister/src/index.js",[],["28","29"],"/home/ky/deploy/finalregister/src/App.js",["30"],"/home/ky/deploy/finalregister/src/reportWebVitals.js",[],"/home/ky/deploy/finalregister/src/component/form/login/index.js",[],"/home/ky/deploy/finalregister/src/component/todo/index.js",["31","32"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction Todo(props) {\n\n    const [todoname, setTodoname] = useState(\"\") //qwerty\n    const [idSave, setidSave] = useState(\"\");\n    const [data, setData] = useState([]);\n    const [isEdit, setisEdit] = useState(false);\n\n    const todonameInputChange = (e) => {\n        setTodoname(e.target.value);\n        console.log(e.target.value)\n    }\n\n    const handleDeleteButton = (e) => {\n        console.log(e.target.id);\n        try {\n            const response = axios.post(`/deleteTask/${e.target.id}`)\n            getUser();\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleUpdateButton = (e) => {\n        setisEdit(true);\n        setTodoname(e.target.name)\n        setidSave(e.target.id)\n        getTodoName(e.target.id)\n    }\n\n    const handleSaveButton = (e) => {\n        setTodoname(\" \");\n        setisEdit(false);\n        axios.post('/TodoUpdate',{id: idSave, todoname: todoname })\n        .then(function (response) \n        {\n            getUser()\n        })\n        .catch(function (error) { return error })\n    }\n\n    const handleAddButton = async () => {\n        const detail = {\n            todoname: todoname,\n            userId: props.userId\n        }\n        if (todoname !== \"\") {\n\n            let event = await axios.post('/insert', detail)\n            if (event.data.Type === \"Success\") {\n                setTodoname(\"\");\n                localStorage.setItem(\"todo\", Todo)\n            }\n            else {\n                alert(event.data.Message)\n            }\n        }\n        getUser()\n    }\n\n    function getUser() {\n        console.log('%c 🍷 userId: ', 'font-size:20px;background-color: #33A5FF;color:#fff;', props.userId);\n        axios.get(`/users/${props.userId}/todos`)\n        \n            .then(function (response) {\n                console.log('%c 🍬 response: ', 'font-size:20px;background-color: #465975;color:#fff;', response);\n          \n                setData(response.data);\n            })\n            .catch(function (error) { return error })\n    }\n\n    function getTodoName(id) {\n        axios.get(`/getTodo/${id}`)\n            .then(function (response) {\n                setTodoname(response.todoname);\n                console.log(\"pop\", response.todoname)\n            })\n            .catch(function (error) { return error })\n    }\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    return (\n        <div class=\"content\">\n            <button onClick={props.handleLogoutButton}>LOGOUT</button>\n            <br></br>\n            <br></br>\n            <input type=\"text\" id=\"todo\" onChange={todonameInputChange} value={todoname}/>\n            <button onClick={handleAddButton} style={{ backgroundColor: 'skyblue' }}>+</button>\n            <br></br>\n            <br></br>\n           \n            <br></br>\n            <br></br>\n            <div>\n                <table border='1' align=\"center\">\n                    <tbody>\n                        <tr>\n                            {/* <th>Id</th> */}\n                            <th>Todo List</th>\n                            <th>Actions</th>\n                        </tr>\n                        {\n                            data.length &&\n                                data.map((items) => {\n                                    return (\n                                        <tr>\n                                            {/* <td>{items.id}</td> */}\n                                            <td>{items.todoname}</td>\n                                            <td>\n                                                <button id={items.id} onClick={handleDeleteButton} >DELETE</button>\n                                                <button id={items.id} name={items.todoname} onClick={handleUpdateButton}>EDIT</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }) \n                              \n                        }\n                    </tbody>\n                </table>         \n                <span>\n                    <br></br>\n                    <br></br>\n                    {isEdit && <input value={todoname} type=\"text\" id=\"todoEdit\" onChange={todonameInputChange}></input>}\n                    {console.log(\"asasa\", todoname)}\n                    <br></br>\n                <br></br>\n                     {isEdit && <button onClick={handleSaveButton}>Save</button>} \n                 </span>\n                 <br></br>\n                <br></br>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo","/home/ky/deploy/finalregister/src/component/form/register/index.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":9,"column":10,"nodeType":"39","messageId":"40","endLine":9,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":19,"column":19,"nodeType":"39","messageId":"40","endLine":19,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":87,"column":8,"nodeType":"44","endLine":87,"endColumn":10,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [getUser]",{"range":"51","text":"52"},[2445,2447],"[getUser]"]